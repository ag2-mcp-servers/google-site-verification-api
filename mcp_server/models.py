# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T02:53:38+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class Site(BaseModel):
    identifier: Optional[str] = Field(
        None,
        description='The site identifier. If the type is set to SITE, the identifier is a URL. If the type is set to INET_DOMAIN, the site identifier is a domain name.',
    )
    type: Optional[str] = Field(
        None,
        description='The type of resource to be verified. Can be SITE or INET_DOMAIN (domain name).',
    )


class SiteVerificationWebResourceGettokenRequest(BaseModel):
    site: Optional[Site] = Field(
        None, description='The site for which a verification token will be generated.'
    )
    verificationMethod: Optional[str] = Field(
        None,
        description="The verification method that will be used to verify this site. For sites, 'FILE' or 'META' methods may be used. For domains, only 'DNS' may be used.",
    )


class SiteVerificationWebResourceGettokenResponse(BaseModel):
    method: Optional[str] = Field(
        None,
        description='The verification method to use in conjunction with this token. For FILE, the token should be placed in the top-level directory of the site, stored inside a file of the same name. For META, the token should be placed in the HEAD tag of the default page that is loaded for the site. For DNS, the token should be placed in a TXT record of the domain.',
    )
    token: Optional[str] = Field(
        None,
        description='The verification token. The token must be placed appropriately in order for verification to succeed.',
    )


class Site1(BaseModel):
    identifier: Optional[str] = Field(
        None,
        description='The site identifier. If the type is set to SITE, the identifier is a URL. If the type is set to INET_DOMAIN, the site identifier is a domain name.',
    )
    type: Optional[str] = Field(
        None, description='The site type. Can be SITE or INET_DOMAIN (domain name).'
    )


class SiteVerificationWebResourceResource(BaseModel):
    id: Optional[str] = Field(
        None,
        description='The string used to identify this site. This value should be used in the "id" portion of the REST URL for the Get, Update, and Delete operations.',
    )
    owners: Optional[List[str]] = Field(
        None, description='The email addresses of all verified owners.'
    )
    site: Optional[Site1] = Field(
        None,
        description='The address and type of a site that is verified or will be verified.',
    )


class Alt(Enum):
    json = 'json'


class SiteVerificationWebResourceListResponse(BaseModel):
    items: Optional[List[SiteVerificationWebResourceResource]] = Field(
        None, description='The list of sites that are owned by the authenticated user.'
    )
